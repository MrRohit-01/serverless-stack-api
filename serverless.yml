# NOTE: update this with your service name
service: notes-api

# Create an optimized package for our functions 
package:
  individually: true

plugins:
  - serverless-bundle # Package our functions with Webpack
  - serverless-offline
  - serverless-dotenv-plugin # Load .env as environment variables

provider:
  name: aws
  runtime: nodejs16.x
  stage: prod
  region: us-east-1


  # These environment variables are made available to our functions
  # under process.env.
  environment:
    tableName: notes

  # 'iamRoleStatements' defines the permission policy for the Lambda function.
  # In this case Lambda functions are granted with permissions to access
  #  â†ª DynamoDB.
  iamRoleStatements:
    - Effect: Allow
      Action: "dynamodb:*"
        # - dynamodb:Scan
        # - dynamodb:Query
        # - dynamodb:GetItem
        # - dynamodb:PutItem
        # - dynamodb:UpdateItem
        # - dynamodb:DeleteItem
        # - dynamodb:DescribeTable
      Resource: "arn:aws:dynamodb:us-east-1:*:*"

functions:
  # Defines an HTTP API endpoint that calls the main function in create.js
  # - path: url path is /notes
  # - method: POST request
  create:
    handler: create.main
    events:
      - http:
        path: notes
        method: post